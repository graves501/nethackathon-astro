---
import { DateTime, Info } from "luxon";
import type { Streamer } from "../interfaces/streamer";

function formatStartTime(start: string) {
  const dateTime = DateTime.fromMillis(parseInt(start)).toUTC();
  return `${Info.weekdays()[dateTime.weekday - 1]}, ${dateTime.toLocaleString(DateTime.TIME_SIMPLE)}`;
}

const response = await fetch('https://api.nethackathon.org/schedule');
const data = await response.json();
const streamers = data.streamers.sort((a: Streamer, b: Streamer) => {
  return a.start_time.localeCompare(b.start_time);
});

---

<h2>Schedule <span style="font-size: medium;">All times <span id="time-zone">UTC</span></span></h2>
<table>
  <thead>
    <tr>
      <th>Date</th>
      <th>Channel</th>
      <th>Notes</th>
    </tr>
  </thead>
  <tbody>
  {streamers.sort().map((streamer: Streamer) => (
    <tr>
      <td class="start-time" data-ts={streamer.start_time}>{formatStartTime(streamer.start_time)}</td>
      <td><a href={`https://twitch.tv/${streamer.username}`}>{streamer.username}</a></td>
      <td>{(streamer.notes) ? streamer.notes : ''}</td>
    </tr>
  ))}
  </tbody>
</table>

<style>
  table {
    border-collapse: collapse;
    margin-bottom: 1em;
  }
  td {
    border-bottom: 1px solid;
    padding: 16px;
    height: 21px;
    line-height: 21px;
    min-width: 12em;
  }
  td[data-theme='dark'] {
    border-bottom-color: var(--color-light);
  }
  td[data-theme='light'] {
    border-bottom-color: var(--color-dark);
  }
</style>

<script>
  import { DateTime, Info } from "luxon";

  window.addEventListener('load', () => {
    const timeZone = document.getElementById('time-zone');
    if (!timeZone) return;
    const tds = document.getElementsByClassName('start-time');
    let lastDay = '';
    for (let i = 0; i < tds.length; i++) {
      const dateTime = DateTime.fromMillis(parseInt(tds[i].dataset.ts)).toLocal();
      const day = Info.weekdays()[dateTime.weekday - 1];
      const dayString = (day === lastDay) ? '' : day;
      lastDay = day;
      tds[i].innerHTML = `<div style="width: 6em; display: inline-block; color: rgb(234, 51, 247); font-weight: bold;" class="day">${dayString}</div> ${dateTime.toLocaleString(DateTime.TIME_SIMPLE)}`;
    }
    timeZone.innerHTML = DateTime.local().offsetNameShort;
  });
</script>
